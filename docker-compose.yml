version: '3.9'

services:
  discovery:
    image: amiril/kalado_discovery:latest
    container_name: discovery
    build:
      context: ./discovery
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=Eureka-Discovery-Service
      - SERVER_PORT=18761
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=discovery
      - EUREKA_SERVER_ENABLE_SELF_PRESERVATION=false
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    ports:
      - "18761:18761"
    networks:
      - kalado-net

  gateway:
    image: amiril/kalado_gateway:latest
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=API-Gateway
      - SERVER_PORT=8083
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=true
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    depends_on:
      - discovery
    ports:
      - "8083:8083"
    networks:
      - kalado-net

  authentication:
    image: amiril/kalado_authentication:latest
    container_name: authentication
    build:
      context: ./authentication
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=authentication-service
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kalado
      - SPRING_DATASOURCE_USERNAME=kalado
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=63179
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - JWT_SECRET_KEY=X71wHJEhg1LQE5DzWcdc/BRAgIvnqHYiZHBbqgrBOZLzwlHlHh/W1ScQGwd1XM8V1c5vtgGlDS8lb64zjZEZXg==
    depends_on:
      - discovery
      - postgres
      - redis
    ports:
      - "8081:8081"
    networks:
      - kalado-net

  user:
    image: amiril/kalado_user:latest
    container_name: user
    build:
      context: ./user
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=user-service
      - SERVER_PORT=8085
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kalado
      - SPRING_DATASOURCE_USERNAME=kalado
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    depends_on:
      - discovery
      - postgres
    ports:
      - "8085:8085"
    networks:
      - kalado-net

  product:
    image: amiril/kalado_product:latest
    container_name: product
    build:
      context: ./product
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=product-service
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kalado
      - SPRING_DATASOURCE_USERNAME=kalado
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=63179
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    depends_on:
      - discovery
      - postgres
      - redis
    ports:
      - "8082:8082"
    networks:
      - kalado-net

  # search:
  #   image: amiril/kalado_search:latest
  #   container_name: search
  #   build:
  #     context: ./search
  #     dockerfile: Dockerfile
  #   environment:
  #     - SPRING_APPLICATION_NAME=search-service
  #     - SERVER_PORT=8084
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
  #     - ELASTICSEARCH_HOST=elasticsearch
  #     - ELASTICSEARCH_PORT=9200
  #     - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
  #     - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
  #     - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
  #   depends_on:
  #     - discovery
  #     - elasticsearch
  #   ports:
  #     - "8084:8084"
  #   networks:
  #     - kalado-net

  # reporting:
  #   image: amiril/kalado_reporting:latest
  #   container_name: reporting
  #   build:
  #     context: ./reporting
  #     dockerfile: Dockerfile
  #   environment:
  #     - SPRING_APPLICATION_NAME=reporting-service
  #     - SERVER_PORT=8086
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kalado
  #     - SPRING_DATASOURCE_USERNAME=kalado
  #     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
  #     - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
  #     - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
  #     - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
  #   depends_on:
  #     - discovery
  #     - postgres
  #   ports:
  #     - "8086:8086"
  #   networks:
  #     - kalado-net

  # admin:
  #   image: amiril/kalado_admin:latest
  #   container_name: admin
  #   build:
  #     context: ./admin
  #     dockerfile: Dockerfile
  #   environment:
  #     - SPRING_APPLICATION_NAME=admin-service
  #     - SERVER_PORT=8087
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kalado
  #     - SPRING_DATASOURCE_USERNAME=kalado
  #     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
  #     - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
  #     - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
  #     - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
  #   depends_on:
  #     - discovery
  #     - postgres
  #   ports:
  #     - "8087:8087"
  #   networks:
  #     - kalado-net

  # notification:
  #   image: amiril/kalado_notification:latest
  #   container_name: notification
  #   build:
  #     context: ./notification
  #     dockerfile: Dockerfile
  #   environment:
  #     - SPRING_APPLICATION_NAME=notification-service
  #     - SERVER_PORT=8088
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=63179
  #     - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
  #     - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
  #     - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
  #     - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
  #   depends_on:
  #     - discovery
  #     - redis
  #   ports:
  #     - "8088:8088"
  #   networks:
  #     - kalado-net

  payment:
    image: amiril/kalado_payment:latest
    container_name: payment
    build:
      context: ./payment
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=payment-service
      - SERVER_PORT=8089
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kalado
      - SPRING_DATASOURCE_USERNAME=kalado
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:18761/eureka/
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus,health
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    depends_on:
      - discovery
      - postgres
    ports:
      - "8089:8089"
    networks:
      - kalado-net

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=kalado
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=kalado
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - kalado-net

  redis:
    image: redis:7-alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "63179:6379"
    networks:
      - kalado-net

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=kalado_pass
      - xpack.security.enabled=true
    ports:
      - "9200:9200"
    networks:
      - kalado-net

networks:
  kalado-net:
    driver: bridge

volumes:
  postgres-data:

